{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/blackhole.js","webpack:///./lib/board.js","webpack:///./lib/dogeball.js","webpack:///./lib/game.js","webpack:///./lib/target.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;;AAGA,2B;;;;;;;;;;;ACxCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6B;AACA,kD;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;;;;;;;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,0B;;;;;;;;;;;AC9DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,sB;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,wB;;;;;;;;;;;ACjBA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,2B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;;AAGA,sB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/board.js\");\n","const colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\n\nclass Blackhole {\n  constructor(ctx, x, y, mass, radius, gravity){\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.gravity = radius;\n    this.mass = mass;\n    this.range = radius * 1.6;\n    this.draw();\n    this.applyGravity = this.applyGravity.bind(this);\n  }\n\n  draw(){\n    const img = new Image();\n    img.src ='./assets/images/blackhole.png';\n    this.ctx.drawImage(img, this.x-this.radius/2, this.y-this.radius/2, this.radius*2, this.radius*2);\n    // this.ctx.beginPath();\n    // this.ctx.arc(this.x + this.radius/2, this.y + this.radius/2, this.radius, 0, Math.PI*2);\n    // this.ctx.strokeStyle = '#FFF';\n    // this.ctx.stroke();\n    // this.ctx.closePath();\n  }\n\n  applyGravity(doge, distance){\n    const force = this.gravity*(this.mass)/(Math.pow(distance, 2));\n    const dx = (this.x - doge.x)/100 * force;\n    const dy = (this.y - doge.y)/100 * force;\n    doge.dy -= dy;\n    doge.dx -= dx;\n  }\n\n\n\n\n}\n\n\nmodule.exports = Blackhole;","const Game = require('./game.js');\nconst Doge = require(\"./dogeball.js\");\nconst Util = require('./util.js');\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    const canvas = document.querySelector('canvas');\n    canvas.width = 1000;\n    canvas.height = 800;\n    const ctx = canvas.getContext(\"2d\");\n    const doge = new Doge(ctx);\n\n    addEventListener('mousedown', event => {\n        const distance = Util.distance(event.offsetX, event.offsetY, doge.x, doge.y + 50);\n        if (distance < 100) {\n            doge.clicked = true;\n        }\n    });\n    addEventListener('mousemove', event => {\n        if(doge.clicked){\n            debugger\n            doge.lineX = event.offsetX;\n            doge.lineY = event.offsetY;\n        }\n    });\n    addEventListener('mouseup', event => {\n        doge.clicked = false; \n        if(doge.lineX && doge.lineY) doge.shoot();            \n    });\n\n    let game = new Game(doge, ctx);\n});\n\nconst colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\n\n\n","const Util = require(\"./util\");\n\nclass Dogeball {\n  constructor(ctx){\n    // this.getPos();\n    this.ctx = ctx;\n    this.clicked = false;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.x = 15;\n    this.y = 700;\n    this.dy = 0;\n    this.dx = 0;\n    this.vel = null;\n    this.acc = null;\n    this.dir = null;\n\n    this.shoot = this.shoot.bind(this);\n     \n  }\n\n  win(){\n    this.dy = 0;\n    this.dx = 0;\n    this.draw('blackhole');\n  }\n\n  draw(link = 'dogeball'){\n    if(this.clicked){\n      this.drawLine();\n    }\n    const img = new Image();\n    img.src =`./assets/images/${link}.png`;\n    this.ctx.drawImage(img, this.x, this.y, 75, 75);\n\n  }\n\n  drawLine(){\n    this.ctx.beginPath();\n    this.ctx.moveTo(50, 750);\n    this.ctx.lineTo(this.lineX, this.lineY);\n    this.ctx.strokeStyle='#fff';\n    this.ctx.lineWidth = 3;\n    this.ctx.stroke();\n  }\n\n  updatePos(){\n    this.y -= this.dy;\n    this.x -= this.dx;\n   }\n\n  shoot(){\n    this.velocity = Util.distance(50, 750, this.lineX, this.lineY)/20;\n    this.dy = (750 - this.lineY)/100;\n    this.dx = (50 - this.lineX)/100;\n    console.log(this.dy, this.dx)\n    this.angle = Util.angle360([50, 750], [this.lineX, this.lineY]);\n  }\n\n\n}\n\nmodule.exports = Dogeball;","const Util = require(\"./util\");\nconst Blackhole = require('./blackhole');\nconst Target = require('./target');\n\nclass Game {\n  constructor(doge, ctx){\n    this.level = 0;\n    this.doge = doge;\n    this.ctx = ctx;\n    this.win = false;\n    this.blackholes = [\n      new Blackhole(ctx, 400, 500, 100, 75, 15),\n      new Blackhole(ctx, 100, 220, 70, 35, 8),\n      new Blackhole(ctx, 700, 300, 75, 60, 15),\n      new Blackhole(ctx, 750, 600, 150, 100, 40),\n      new Blackhole(ctx, 450, 150, 50, 25, 6)\n    ];\n    this.bumpers = [];\n    this.target = new Target(ctx, 950, 0, 50);\n    this.animate = this.animate.bind(this);\n    this.checkAttraction = this.checkAttraction.bind(this);\n    this.updateDoge = this.updateDoge.bind(this);\n    this.checkWin = this.checkWin.bind(this);\n    window.requestAnimationFrame(this.animate);\n  }\n\n  animate(){\n    console.log(this.doge.lineX, this.doge.lineY);\n    this.ctx.clearRect(0,0, 1000, 800);\n    this.target.draw();\n    this.blackholes.forEach(blackhole => blackhole.draw());\n    this.checkWin();\n    this.updateDoge();\n    this.checkAttraction();\n    window.requestAnimationFrame(this.animate);\n  }\n\n  updateDoge(){\n    this.doge.updatePos();\n    this.doge.draw();\n  }\n\n  checkWin(){\n    const distance = Util.distance(this.doge.x, this.doge.y, this.target.x, this.target.y);\n    if (distance < this.target.size && !this.win){\n      this.win = true;\n      this.doge.win();\n      alert(\"win!\");\n    }\n  }\n\n  checkAttraction(){\n    this.blackholes.forEach(blackhole => {\n      const distance = Util.distance(this.doge.x, this.doge.y, blackhole.x, blackhole.y);\n      if (blackhole.range >= distance){\n        blackhole.applyGravity(this.doge, distance);\n      }\n    })\n  }\n}\n\nmodule.exports = Game;","class Target{\n  constructor(ctx, x, y, size){\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n\n  draw(){\n  const img = new Image();\n  img.src ='./assets/images/goal.png';\n  this.ctx.drawImage(img, this.x - this.size/2, this.y + this.size/2, this.size, this.size);\n  }\n\n\n}\n\nmodule.exports = Target;","const Util = {\n randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  },\n  \n randomColor(colors){\n    return colors[Math.floor(Math.random() * colors.length)]\n  },\n\n distance(x1, y1, x2, y2) {\n    const xDist = x2 - x1\n    const yDist = y2 - y1\n  \n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n  },\n\n  angle(x2, y2, x1, y1) {\n    const dy = y1 - y2;\n    const dx = x1 - x2;\n    let theta = Math.atan2(dy, dx);\n    theta *= 180 / Math.PI; \n    return theta;\n  },\n\n  angle360(start, end) {\n    var theta = this.angle(start[0], start[1], end[0], end[1]);\n    if (theta < 0) theta = 360 + theta;\n    return theta;\n  }\n}\n\n\nmodule.exports = Util;"],"sourceRoot":""}